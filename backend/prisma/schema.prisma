// To create a new migration:
// npx prisma migrate dev --name init
// or docker exec -it backend npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  lastname      String?
  firstname     String?
  email         String       @unique
  password      String
  address       String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  superAdmin    Boolean      @default(false)
  posts         Post[]
  Comment       Comment[]
  Etudiant      Etudiant?    @relation(fields: [etudiantId], references: [id])
  Intervenant   Intervenant? @relation(fields: [intervenantId], references: [id])
  etudiantId    String?
  intervenantId String?
}

model Post {
  id        String    @id @default(cuid())
  title     String
  content   String
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  authorId  String
  author    User      @relation(fields: [authorId], references: [id])
  comments  Comment[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  postId    String
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post   Post @relation(fields: [postId], references: [id])
  author User @relation(fields: [authorId], references: [id])
}

model Salle {
  id        String   @id @default(cuid())
  name      String
  capacite  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Etudiant {
  id        String       @id @default(cuid())
  promotion promotions[]
  User      User[]
}

model Intervenant {
  id       String     @id @default(cuid())
  matieres matieres[]
  User     User[]
}

// temporaire
model matieres {
  id            Int          @id @default(autoincrement())
  name          String?
  hours         Int?
  semester      Int?
  color         String       @unique
  Intervenant   Intervenant? @relation(fields: [intervenantId], references: [id])
  intervenantId String?
}

// temporaire
model promotions {
  id         Int       @id @default(autoincrement())
  name       String?
  students   Int?
  courses    Int[]     @default([1])
  Etudiant   Etudiant? @relation(fields: [etudiantId], references: [id])
  etudiantId String?
}
